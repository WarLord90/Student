{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentService {\n  constructor(http) {\n    this.http = http;\n    this.myAppUrl = 'https://localhost:44390/';\n    this.myApiUrl = 'api/student/';\n  }\n  getListTarjetas() {\n    return this.http.get(this.myAppUrl + this.myApiUrl);\n  }\n  deleteTarjeta(id) {\n    return this.http.delete(this.myAppUrl + this.myApiUrl + id);\n  }\n  saveTarjeta(tarjeta) {\n    return this.http.post(this.myAppUrl + this.myApiUrl, tarjeta);\n  }\n  updateTarjeta(id, tarjeta) {\n    return this.http.put(this.myAppUrl + this.myApiUrl + id, tarjeta);\n  }\n  static #_ = this.ɵfac = function StudentService_Factory(t) {\n    return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StudentService,\n    factory: StudentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["StudentService","constructor","http","myAppUrl","myApiUrl","getListTarjetas","get","deleteTarjeta","id","delete","saveTarjeta","tarjeta","post","updateTarjeta","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\javierjaimes\\Desktop\\GitHub\\Angular Udemy\\Angular Udemy\\Randall\\Student\\src\\app\\services\\student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n  private myAppUrl = 'https://localhost:44390/';\n  private myApiUrl = 'api/student/';\n\n  constructor(private http: HttpClient) { }\n\n  getListTarjetas(): Observable<any>{\n    return this.http.get(this.myAppUrl + this.myApiUrl);\n  }\n  \n  deleteTarjeta(id: number): Observable<any>{\n    return this.http.delete(this.myAppUrl + this.myApiUrl + id)\n  }\n\n  saveTarjeta(tarjeta: any): Observable <any>{\n    return this.http.post(this.myAppUrl + this.myApiUrl, tarjeta);\n  }\n\n  updateTarjeta(id: number, tarjeta: any): Observable <any>{\n    return this.http.put(this.myAppUrl + this.myApiUrl + id, tarjeta);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,QAAQ,GAAG,0BAA0B;IACrC,KAAAC,QAAQ,GAAG,cAAc;EAEO;EAExCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,IAAI,CAACH,QAAQ,GAAG,IAAI,CAACC,QAAQ,CAAC;EACrD;EAEAG,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACN,IAAI,CAACO,MAAM,CAAC,IAAI,CAACN,QAAQ,GAAG,IAAI,CAACC,QAAQ,GAAGI,EAAE,CAAC;EAC7D;EAEAE,WAAWA,CAACC,OAAY;IACtB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,QAAQ,GAAG,IAAI,CAACC,QAAQ,EAAEO,OAAO,CAAC;EAC/D;EAEAE,aAAaA,CAACL,EAAU,EAAEG,OAAY;IACpC,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAC,IAAI,CAACX,QAAQ,GAAG,IAAI,CAACC,QAAQ,GAAGI,EAAE,EAAEG,OAAO,CAAC;EACnE;EAAC,QAAAI,CAAA,G;qBApBUf,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdpB,cAAc;IAAAqB,OAAA,EAAdrB,cAAc,CAAAsB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}